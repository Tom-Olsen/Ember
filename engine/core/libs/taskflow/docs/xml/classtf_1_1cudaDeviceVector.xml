<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classtf_1_1cudaDeviceVector" kind="class" language="C++" prot="private">
    <compoundname>tf::cudaDeviceVector</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1cudaDeviceVector_1a52da84c77829a1ea261fc187ef2e474e" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* tf::cudaDeviceVector&lt; T &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>tf::cudaDeviceVector::_data</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="828" column="7" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="828" bodyend="828"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1cudaDeviceVector_1a4637a4ea042aa8e3c2b7be1e5ed3ce84" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t tf::cudaDeviceVector&lt; T &gt;::_N</definition>
        <argsstring></argsstring>
        <name>_N</name>
        <qualifiedname>tf::cudaDeviceVector::_N</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="829" column="12" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="829" bodyend="829"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a7783ef6aed9b7872d22f5f9127887206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaDeviceVector&lt; T &gt;::cudaDeviceVector</definition>
        <argsstring>()=default</argsstring>
        <name>cudaDeviceVector</name>
        <qualifiedname>tf::cudaDeviceVector::cudaDeviceVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="784" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a6d0daf9a0d45cb4827c0dd8e0d434ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaDeviceVector&lt; T &gt;::cudaDeviceVector</definition>
        <argsstring>(size_t N)</argsstring>
        <name>cudaDeviceVector</name>
        <qualifiedname>tf::cudaDeviceVector::cudaDeviceVector</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="786" column="5" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="786" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1adf971821fec0d2817ca510ec8509612f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaDeviceVector&lt; T &gt;::cudaDeviceVector</definition>
        <argsstring>(cudaDeviceVector &amp;&amp;rhs)</argsstring>
        <name>cudaDeviceVector</name>
        <qualifiedname>tf::cudaDeviceVector::cudaDeviceVector</qualifiedname>
        <param>
          <type>cudaDeviceVector &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="795" column="5" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="795" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a84682a01838130c1eb70d9da95f1d71f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaDeviceVector&lt; T &gt;::~cudaDeviceVector</definition>
        <argsstring>()</argsstring>
        <name>~cudaDeviceVector</name>
        <qualifiedname>tf::cudaDeviceVector::~cudaDeviceVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="801" column="5" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="801" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a68d45dfab0229735a136ea693bcb29f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>cudaDeviceVector &amp;</type>
        <definition>cudaDeviceVector &amp; tf::cudaDeviceVector&lt; T &gt;::operator=</definition>
        <argsstring>(cudaDeviceVector &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>tf::cudaDeviceVector::operator=</qualifiedname>
        <param>
          <type>cudaDeviceVector &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="807" column="22" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="807" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1ab235c0e585e4b87ab9a2678fb4d79c3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::cudaDeviceVector&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>tf::cudaDeviceVector::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="818" column="12" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="818" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a0dd4d9925aeee01744eb7db3791290c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * tf::cudaDeviceVector&lt; T &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>tf::cudaDeviceVector::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="820" column="7" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="820" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1abc73ffe0ba3a5786663c641add2c0bc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T * tf::cudaDeviceVector&lt; T &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>tf::cudaDeviceVector::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="821" column="13" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="821" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a20cc8bd1758927a4cc116d0ecd7b8fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaDeviceVector&lt; T &gt;::cudaDeviceVector</definition>
        <argsstring>(const cudaDeviceVector &amp;)=delete</argsstring>
        <name>cudaDeviceVector</name>
        <qualifiedname>tf::cudaDeviceVector::cudaDeviceVector</qualifiedname>
        <param>
          <type>const cudaDeviceVector &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="823" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaDeviceVector_1a59272d16acf20d11adbee5efb5d663df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudaDeviceVector &amp;</type>
        <definition>cudaDeviceVector &amp; tf::cudaDeviceVector&lt; T &gt;::operator=</definition>
        <argsstring>(const cudaDeviceVector &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>tf::cudaDeviceVector::operator=</qualifiedname>
        <param>
          <type>const cudaDeviceVector &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_memory.hpp" line="824" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="taskflow/cuda/cuda_memory.hpp" line="780" column="1" bodyfile="taskflow/cuda/cuda_memory.hpp" bodystart="780" bodyend="830"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaDeviceVector_1a52da84c77829a1ea261fc187ef2e474e" prot="private" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>_data</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a4637a4ea042aa8e3c2b7be1e5ed3ce84" prot="private" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>_N</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a7783ef6aed9b7872d22f5f9127887206" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>cudaDeviceVector</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a6d0daf9a0d45cb4827c0dd8e0d434ce3" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>cudaDeviceVector</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1adf971821fec0d2817ca510ec8509612f" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>cudaDeviceVector</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a20cc8bd1758927a4cc116d0ecd7b8fb5" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>cudaDeviceVector</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a0dd4d9925aeee01744eb7db3791290c0" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>data</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1abc73ffe0ba3a5786663c641add2c0bc4" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>data</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a68d45dfab0229735a136ea693bcb29f4" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a59272d16acf20d11adbee5efb5d663df" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1ab235c0e585e4b87ab9a2678fb4d79c3e" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>size</name></member>
      <member refid="classtf_1_1cudaDeviceVector_1a84682a01838130c1eb70d9da95f1d71f" prot="public" virt="non-virtual"><scope>tf::cudaDeviceVector</scope><name>~cudaDeviceVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
